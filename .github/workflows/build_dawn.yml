name: Build Dawn

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Build Windows MSVC x64 Debug",
            os: windows-latest,
            flavor: win_msvc_debug.txt,
            package: dawn_win_x64_debug
          }
    steps:
      - uses: actions/checkout@v1

      - name: Prepare Depot Tools
        shell: pwsh
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          $env:Path = '' + (Get-Location) + '/depot_tools;' + $env:Path
          gclient --version

      - name: Prepare Google Dawn
        shell: pwsh
        run: |
          $env:Path = '' + (Get-Location) + '/depot_tools;' + $env:Path
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN = '0'
          git clone https://dawn.googlesource.com/dawn
          pushd dawn
          cp scripts/standalone.gclient .gclient
          gclient sync
          popd

      - name: Configure build of Google Dawn
        shell: pwsh
        run: |
          $env:Path = '' + (Get-Location) + '/depot_tools;' + $env:Path
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN = '0'
          mkdir dawn/out
          cp flavors/${{ matrix.config.flavor }} dawn/out/args.gn
          pushd dawn
          gn gen out --target_cpu="x64"
          popd

      - name: Build Google Dawn
        shell: pwsh
        run: |
          $env:Path = '' + (Get-Location) + '/depot_tools;' + $env:Path
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN = '0'
          ninja -C dawn/out dawn_native_shared dawn_proc_shared dawncpp
          cmake -S webgpucpp -B webgpucpp/build
          cmake --build webgpucpp/build --config RelWithDebInfo 

      - name: Pack
        shell: pwsh
        run: |
          mkdir package/bin
          mkdir package/lib
          mkdir package/include
          mkdir symbols
          Copy-Item -Path "dawn/LICENSE" -Destination "package/LICENSE"
          Copy-Item -Path "dawn/src/include/*" -Destination "package/include" -Recurse
          Copy-Item -Path "dawn/out/gen/src/include/*" -Destination "package/include" -Recurse -Force
          Get-ChildItem dawn/out -Filter dawn_*.dll | Copy-Item -Destination "package/bin"
          Get-ChildItem dawn/out -Filter dawn_*.pdb | Copy-Item -Destination "symbols"
          Get-ChildItem dawn/out -Filter dawn_*.lib | Copy-Item -Destination "package/lib"
          Get-ChildItem webgpucpp/build/bin -Filter *.pdb | Copy-Item -Destination "symbols"
          Get-ChildItem webgpucpp/build/bin -Filter *.lib | Copy-Item -Destination "package/lib"

      - name: Upload Library
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.package }}.zip
          path: ./package
          
      - name: Upload Debug Symbols
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.package }}_pdb.zip
          path: ./symbols